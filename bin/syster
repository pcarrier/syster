#!/usr/bin/env ruby

require 'logger'
require 'optparse'
require 'syster/reporters'
require 'syster/engine'

options = {
  :reporter => 'console',
  :excludes => [],
  :logger   => Logger.new(STDERR)
}

optparse = OptionParser.new do |opts|
  opts.banner = "Usage: syster [--exclude exclude..]\n" \
    "  Report host information"
  opts.on '-r', '--reporter REPORTER', 'Use a reporter (or "list")' do |r|
    options[:reporter] = r
  end
  opts.on '-u', '--uri URI', 'Specify a URI for your reporter' do |u|
    options[:uri] = u
  end
  opts.on '-e', '--exclude IDENTIFIER', 'Exclude a source' do |e|
    options[:excludes] << e
  end
  opts.on '-E', '--exclude-regexp PATTERN', 'Exclude sources by regexp' do |p|
    options[:excludes] << Regexp.new(p)
  end
  opts.on '-q', '--quiet', 'Hide info and debug log levels' do |p|
    options[:logger].level = Logger::WARN
  end
end

optparse.parse!

if options[:reporter] == 'list'
  Syster::Reporters.available.each do |n, _|
    puts n
  end
  exit 0
end

reporter = Syster::Reporters.available[options[:reporter]].new options
engine = Syster::Engine.new options
engine.run reporter
